# Symbols in the grammar are case-sensitive.
# 
# This grammar uses a convention that
#    - terminals are lowercase          (president)
#    - preterminals are capitalized     (Noun)
#    - other nonterminals are all-caps  (NP)
# 
# This convention just makes grammars more readable to humans.  Thus:
#
#    - When *you* are writing grammars, you should 
#      follow this convention unless you have a good reason not to.  
#
#    - But the  *program* should still work with grammars that don't
#      follow this convention.  So how can the program reliably tell
#      the difference between terminal and nonterminal symbols?  If
#      there is at least one rule for rewriting a symbol, then that
#      symbol is a nonterminal and should be rewritten.
#######################

# Rules for creating full sentences.

1	ROOT	S Dot
1   ROOT    S Punct
1   ROOT    IsItTrueThatS Question

# The basic grammar rules.  Here's what the abbreviations stand for:
#    S  = sentence
#    NP = noun phrase
#    VP = verb phrase
#    PP = prepositional phrase
#    Det = determiner (sometimes called "article")
#    Prep = preposition
#    Adj = adjective

1	S	NP VP
1	VP	Verb NP
3	NP	Det Noun
1	NP	NP PP
1	PP	Prep NP
1	Noun	Adj Noun

# Vocabulary.  Your program can see that "ate" is a terminal
# symbol because there exists no rule for rewriting it.
# Any symbol that can rewrite as a terminal (or a string of 
# terminals, like "chief of staff") is called a "preterminal."  Notice 
# that a preterminal is a special kind of nonterminal.

1	Verb	ate
1	Verb	wanted
1	Verb	kissed
1	Verb	understood
1	Verb	pickled

1	Det	the
1	Det	a
1	Det	every

1	Noun	president
1	Noun	sandwich
1	Noun	pickle
1   Noun    chief OfStaff
1	Noun	floor

1	Adj	fine
1	Adj	delicious
1	Adj	perplexed
1	Adj	pickled

1	Prep	with
1	Prep	on
1	Prep	under
1	Prep	in

#####################################################

# Preterminals CNF backward compatibility

1 	Dot     .
1   Punct   !
1   Question    ?
1   IsItTrueThatS   is ItTrueThatS
1   ItTrueThatS it TrueThatS
1   TrueThatS true ThatS
1   ThatS   that S
1   OfStaff of staff

#####################################################

# Basic grammar rules added

# Sentence (a)
#   - ProperNoun = An entity that performs an action

5 	S 	ProperNoun VP

# Sentence (b)
# 	- Conj = conjunctions (and, or)

3 	S 	Noun_Conj_NP Verb_Conj_VP
1 	Noun_Conj_NP 	Noun Conj_NP
1 	Conj_NP 	Conj NP
1 	Verb_Conj_VP 	Verb Conj_VP
1 	Conj_VP 	Conj VP

# Sentence (c)
#   - IVerb = intransitive verb (disappeared, coughed, sighed)

3	S 	NP IVerb
1	S 	Noun IVerb

# Sentence (d)
#   - Comp = complementizer - words that can be used to turn a clause into the subject or object of a sentence

3 	VP 	Verb Comp_S
1 	Comp_S 	Comp S

# Sentence (e)
#   - Pron = pronouns - refer back to people and things that we have already identified (he, she, it, they)

7 	S 	Pron_Verb NP_Comp_S
1	VP  Verb Noun
1 	Pron_Verb 	Pron Verb
1 	NP_Comp_S 	NP Comp_S

# Sentence (f)
#   - Very = the word "very". This could be classified as Adverb but we also use "very" as Adjective

2   Adj    Very Adj

# Sentence (g)
#   - PrepNP = An NP that comes after a preposition word

3   VP  Verb PrepNP
1   PrepNP  Prep NP

# Sentence (h)
#   - Be = The formed verb "be". (for our purposes only "is")

6   VP Be Adj

# Sentence (i)
#   - PVerb = A verb in present form

5   VP  Be PVerbNP
1   PVerbNP   PVerb NP

# Sentence (j)

7   VP  Be NP

#####################################################

# Preterminals for new sentences grammar

# Sentence (a)

1 	ProperNoun     Sally

# Sentence (b)

5 	Conj 	and
1 	Conj 	or

# Sentence (c)

1	IVerb 	sighed

# Sentence (d)

1 	Comp 	that
2	Verb	thought

# Sentence (e)

1	Verb    perplexed
5 	Pron 	it

# Sentence (f)
1   Very very

# Senence (g)

1   Noun proposal
1   Noun desk

# Sentence (h)
1   Be  is
1   Adj lazy

# Sentece (i)
1   PVerb   eating